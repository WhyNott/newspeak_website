= javascript_include_tag 'graphs'

#sigma-container{ style: 'width: 100%; height: 600px; background: transparent; position: absolute; left: 0' }

:javascript
  $(function () {
    'use strict';

    var data = #{@graph.to_json};

    var container = document.getElementById('sigma-container');

    var options = {
      width: '100%',
      height: '600px',

      interaction: {
        selectable: false,
        hover: false,
        dragNodes: false
      },

      edges: {
        scaling: {
          min: 1,
          max: 2
        },

        color: {
          inherit: 'from'
        },

        selectionWidth: function (width) {
          return width + 0.5;
        }
      },

      nodes: {
        shape: 'dot',

        font: {
          face: 'akkuratRegular'
        },

        color: {
          border: '#555',
          background: '#666'
        }
      },

      groups: {}
    };

    var colorSwatch = [['#556270', '#3f4953'], ['#4ECDC4', '#33b5ac'], ['#C7F464', '#b6f134'], ['#FF6B6B', '#ff3838'], ['#C44D58', '#a73742']],
      uniqColorCounter = 0,
      nodeMap = {};

    data.nodes.forEach(function (n) {
      nodeMap[n.id] = n;

      if (typeof options.groups[n.group] === 'undefined') {
        var swatch = colorSwatch[uniqColorCounter % colorSwatch.length];

        options.groups[n.group] = {
          color: {
            border: swatch[1],
            background: swatch[0]
          }
        };

        uniqColorCounter++;
      }
    });

    var network = new vis.Network(container, data, options);

    if (data.center != null) {
      network.focus(data.center, {
        scale: 0.9,
        animation: {
          duration: 1500,
          easingFunction: 'easeInOutQuint'
        }
      });
    }

    network.on('click', function (props) {
      var node = network.getNodeAt(props.pointer.DOM);

      if (typeof node === 'undefined') {
        return;
      }

      var url = nodeMap[node.id].meta.url;

      if (url.length > 0) {
        window.open(url, '_blank');
      }
    });

    network.on('hoverNode', function (props) {
      if (nodeMap[props.node].meta.url.length > 0) {
        $(container).addClass('clickable');
      }
    });

    network.on('blurNode', function () {
      $(container).removeClass('clickable');
    });
  });
