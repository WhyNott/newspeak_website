%script{ type: 'text/javascript', src: asset_path('sigma.min.js') }
%script{ type: 'text/javascript', src: asset_path('plugins/sigma.parsers.json.min.js') }
%script{ type: 'text/javascript', src: asset_path('plugins/sigma.plugins.animate.min.js') }
%script{ type: 'text/javascript', src: asset_path('plugins/sigma.fruchterman.js') }
%script{ type: 'text/javascript', src: asset_path('sigma.customLabels.js') }

:javascript
  (function () {
    'use strict';

    var graphData, sigInst, listener, colors, communityMap;

    graphData = #{@graph.to_json};

    colors = ['#ECD078', '#D95B43', '#C02942', '#542437', '#53777A'];
    communityMap = [];

    graphData.nodes.forEach(function (n) {
      if (communityMap.indexOf(n.community) === -1) {
        communityMap.push(n.community);
      }
    });

    sigInst = new sigma({
      graph: graphData,

      renderer: {
        container: document.getElementById('sigma-container'),
        type: 'canvas'
      },

      settings: {
        edgeColor: 'default',
        defaultNodeColor: '#555',
        defaultEdgeColor: '#aaa'
      }
    });

    sigInst.graph.nodes().forEach(function (n) {
      if (graphData.center != null && n.id === graphData.center) {
        n.color = '#C02D25';
      }

      if (n.community != null) {
        n.color = colors[communityMap.indexOf(n.community) % colors.length];
      }
    });

    sigInst.refresh();

    sigInst.bind('clickNode', function (e) {
      if (e.data.node.url.length > 0) {
        window.open(e.data.node.url, '_blank');
      }
    });

    listener = sigma.layouts.fruchtermanReingold.start(sigInst, {});

    window.graphData = graphData;
  }());
